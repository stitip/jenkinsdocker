pipeline {
  environment {
	dockerImage = ''
	version = 'v1'
	IMAGE = ''
	appName = 'myapp'
	ECR_URL = '164506192075.dkr.ecr.us-east-1.amazonaws.com'
	ECR_FOLDER = 'renewables-uai3036814-hybrid-arch-dev-ecr'
  }
    agent any

    stages {
        stage ('Compile Stage') {

            steps {
                withMaven(maven : 'MavenLocal') {
                    sh 'mvn clean install'
                }
            }
        }
		
		stage('image tag preparations')
        {
            steps
            {
                script 
                {
					gitCommitHash = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                    version = gitCommitHash.take(7)
                    IMAGE = "${ECR_URL}/${ECR_FOLDER}:$appName"
					echo "$IMAGE"
					
                }
            }
        }
		
		stage('Building image') {
			steps{
				script {
				        sh 'docker --version'
						sh 'kubectl version --short --client'
						dockerImage = docker.build(IMAGE)
				}
			}
		}
		
		stage('Pushing image to ECR') {
            steps{
                script {
				        sh("eval \$(aws ecr get-login-password | sed 's|https://||')")
						sh 'docker push 164506192075.dkr.ecr.us-east-1.amazonaws.com/renewables-uai3036814-hybrid-arch-dev-ecr:myapp'						
                }
            }
        }
		
		/*stage('deploy to K8S') {
            steps{
                withCredentials([file(credentialsId: 'kubec', variable: 'KUBECONFIG')]) {
                        sh 'kubectl version --short --client'
                        sh 'kubectl config view'
                        sh 'kubectl get svc'
                        sh 'kubectl get pod'
                        sh 'helm ls'
                }
            }
        }*/
    }
}
